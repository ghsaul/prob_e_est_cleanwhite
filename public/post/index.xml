<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Probabilidade e Estatística EAD</title>
    <link>/post/</link>
    <description>Recent content in Posts on Probabilidade e Estatística EAD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Post sem autor</title>
      <link>/post/post-sem-autor/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/post-sem-autor/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Notas pessoais sobre o Blogdown</title>
      <link>/post/notas-pessoais-sobre-o-blogdown/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/notas-pessoais-sobre-o-blogdown/</guid>
      <description>.
1.1 - Instalação do Blogdown e Hugoinstall.packages(&amp;#39;blogdown&amp;#39;) # Instala o Blogdownblogdown::install_hugo() # Instala o Hugoblogdown::update_hugo() # Pode ser usado para atualizar o Hugo# Talvez seja uma boa ideia rodar esse codigo logo depois de instalar o Hugo, só pra garantir1.2 - Criando o sitenew_site(dir=&amp;quot;nome_do_diretorio_do_site&amp;quot;)O comando acima cria um site novo com especificações passadas nos argumentos dessa função. Para criar seu primeiro site, basta rodar o comando.</description>
    </item>
    
    <item>
      <title>Equipe</title>
      <link>/post/equipe/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/equipe/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Clean White Theme for Hugo</title>
      <link>/post/readme/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/readme/</guid>
      <description>Clean White Theme for Hugo CleanWhite is a clean, elegant, but fully functional blog theme for Hugo. Here is a live demo site using this theme. It is based on huxblog Jekyll Theme and Clean Blog Jekyll Theme. These two upstream projects have done awesome jobs to create a blog theme, what I&amp;rsquo;m doing here is porting it to Hugo, of which I like the simplicity and the much faster</description>
    </item>
    
    <item>
      <title>Everything about Setting Up My Ubuntu Desktop</title>
      <link>/2018/05/24/set_up_my_ubuntu_desktop/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/24/set_up_my_ubuntu_desktop/</guid>
      <description>Generate SSH Key Pair ssh-keygen -C &amp;quot;zhaohuabing@gmail.com&amp;quot; Shadowsocks Install shadowsokcs sudo apt-get install python3-pip sudo pip3 install shadowsocks Create config at config/shadowsocks.json, with the following content: { &amp;quot;server&amp;quot;:&amp;quot;remote-shadowsocks-server-ip-addr&amp;quot;, &amp;quot;server_port&amp;quot;:443, &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;, &amp;quot;local_port&amp;quot;:1080, &amp;quot;password&amp;quot;:&amp;quot;your-passwd&amp;quot;, &amp;quot;timeout&amp;quot;:300, &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;, &amp;quot;fast_open&amp;quot;:false, &amp;quot;workers&amp;quot;:1 } Start a local socks proxy sudo sslocal -c config/shadowsocks.json -d start In case there is an openssl error, modify shadowsocks source file. sudo vi /usr/local/lib/python3.6/dist-packages/shadowsocks/crypto/openssl.py :%s/cleanup/reset/gc Convert shadowsocks socks proxy to http proxy</description>
    </item>
    
  </channel>
</rss>